{"version":3,"sources":["api/api.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","assets/images/Infinity-1s-200px.svg","components/Users/users.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","serviceWorker.js","redux/users-reducer .js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/News/news.jsx","components/Music/music.jsx","components/Settings/settings.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/SuspenseHoc.js","App.js","index.js","redux/profile-reducer.js","redux/dialogs-reducer.js","components/Settings/settings.module.css","components/common/Preloader/Preloader.jsx","components/common/FormsControls/formsControls.module.css","components/common/FormsControls/formsControls.js","utils/validators/validators.js","assets/images/51f6fb256629fc755b8870c801092942.png","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","hoc/WithAuthRedirect.js"],"names":["__webpack_require__","d","__webpack_exports__","usersAPI","profileAPI","authAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","getStatus","updateStatus","status","put","Me","login","email","password","rememberMe","logout","module","exports","postsBlock","posts","item","nav","activeLink","p","userPhoto","selectedPage","Post","props","react_default","a","createElement","className","s","src","avatar","message","likesCount","Textarea1","Element","maxLength10","maxLengthCreator","MyPosts","React","memo","profile","Preloader","photos","small","postsElements","map","MyPosts_Post_Post","createRef","AddNewPostReduxForm","onSubmit","values","addPost","newPostBody","reduxForm","form","handleSubmit","Field","component","name","placeholder","validate","required","Component","ProfileStatusWithHooks","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","_useState4","setStatusLocal","useEffect","onStatusChange","e","currentTarget","value","onDoubleClick","onChange","autoFocus","onBlur","state","onClick","ProfileInfo","descriptionBlock","large","ProfileInfo_ProfileStatusWithHooks","MyPostsContainer","connect","profilePage","newPostText","dispatch","updateNewPostText","text","action","updateNewPostTextActionCreator","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","Boolean","window","location","hostname","match","initialState","users","totalUsersCount","isFetching","followingInProgress","setUsers","type","setCurrentPage","toggleIsFetching","toggleFollowingProgress","UsersReducer","objectSpread","u","id","followed","count","toConsumableArray","filter","isAuth","setAuthUserData","payload","getAuthUserData","_ref","asyncToGenerator","regenerator_default","mark","_callee","_data$data","_login","wrap","_context","prev","next","sent","resultCode","stop","this","_x","apply","authReducer","initialized","appReducer","reducers","combineReducers","ProfileReducer","dialogsPage","DialogsReducer","usersPage","auth","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Header","header","loginBlock","NavLink","to","Navbar","activeClassName","active","News","Music","Settings","Paginator","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNUmber","rightPortionPageNUmber","styles","paginator","cn","defineProperty","selectPage","pageNumber","key","onPageChanged","Users","max","min","common_Paginator_Paginator","disabled","some","UsersContainer","createSelector","_this","usersChanged","requestUsers","Fragment","User","withAuthRedirect","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","followSuccess","unfollowSuccess","items","totalCount","HeaderContainer","components_Header_Header","_ref3","_callee3","_context3","_x3","LoginReduxForm","Input","error","style","FormSummaryError","_ref2","_callee2","_context2","messages","stopSubmit","_error","_x2","Redirect","formData","withSuspense","Suspense","fallback","DialogsContainer","lazy","bind","ProfileContainer","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","Route","path","render","components_Login_Login","Users_UsersContainer","news","music","settings","AppContainer","withRouter","promise","Promise","all","samuraiJsAPP","BrowserRouter","react_redux_es","ReactDOM","StrictMode","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","newText","setUserProfile","setStatus","getUserProfile","E_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_react_way_of_samurai_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","newPost","E_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","E_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","postId","dialogsData","messageData","addMessageActionCreator","Message","E_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","E_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_Infinity_1s_200px_svg__WEBPACK_IMPORTED_MODULE_1__","_assets_images_Infinity_1s_200px_svg__WEBPACK_IMPORTED_MODULE_1___default","preloader","formControl","input","meta","E_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","react__WEBPACK_IMPORTED_MODULE_1___default","assign","_Element","maxLength","mapStateToPropsForRedirect","RedirectComponent","_React$Component","E_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","E_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","E_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","E_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_5___default","react_router__WEBPACK_IMPORTED_MODULE_6__"],"mappings":"yFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAA,IAAAC,EAAAN,EAAA,IAGaO,GAHbP,EAAA,GAGyBQ,SAAa,CAClCC,iBAAgB,EAChBC,QAAQ,gDACRC,QAAQ,CACJC,UAAU,2CAGLT,EAAS,CAClBU,SADkB,WACuB,IAAhCC,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,EAAGG,EAAeH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACjC,OAAOR,EAASY,IAAT,cAAAC,OAA2BN,EAA3B,WAAAM,OAAgDF,IACrDG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAEhCC,OALkB,WAKA,IAAXC,EAAWV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,EACV,OAAOR,EAASmB,KAAT,UAAAN,OAAwBK,IAC7BJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAEhCI,SATkB,WASE,IAAXF,EAAWV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,EACZ,OAAOR,EAASqB,OAAT,UAAAR,OAA0BK,IAC/BJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAEhCM,WAbkB,WAaG,IAAVJ,EAAUV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EAId,OAFAe,QAAQC,KAAK,8CAEN3B,EAAWyB,WAAWJ,KAIxBrB,EAAW,CACpByB,WADoB,WACC,IAAVJ,EAAUV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EACd,OAAOR,EAASY,IAAT,WAAAC,OAAwBK,IAC7BJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAEhCS,UALoB,SAKVP,GACN,OAAOlB,EAASY,IAAT,kBAAAC,OAA+BK,IACpCJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAEhCU,aAToB,SASPC,GACT,OAAO3B,EAAS4B,IAAT,iBAA8B,CAACD,OAAOA,MAOxC7B,EAAQ,CAChB+B,GADgB,WAEb,OAAQ7B,EAASY,IAAT,WACNE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAEhCc,MALiB,SAKXC,EAAMC,GAA2B,IAAlBC,EAAkBzB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACnC,OAAOR,EAASmB,KAAT,aAA4B,CAACY,QAAMC,WAASC,gBAIvDC,OAViB,WAWb,OAAQlC,EAASqB,OAAT,qCC1DhBc,EAAAC,QAAA,CAAkBC,WAAA,4BAAAC,MAAA,6CCAlBH,EAAAC,QAAA,CAAkBG,KAAA,8DCAlBJ,EAAAC,QAAA,CAAkBI,IAAA,oBAAAD,KAAA,qBAAAE,WAAA,mICDlBN,EAAAC,QAAiB3C,EAAAiD,EAAuB,mECCxCP,EAAAC,QAAA,CAAkBO,UAAA,yBAAAC,aAAA,4JCcHC,EAZF,SAACC,GACZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,MAChBQ,EAAAC,EAAAC,cAAA,OAAKG,IAAKN,EAAMO,SACZP,EAAMQ,QACNP,EAAAC,EAAAC,cAAA,WACFF,EAAAC,EAAAC,cAAA,oBADE,IACkBH,EAAMS,wECG5BC,EAAYC,YAAQ,YACtBC,EAAcC,YAAiB,IAE7BC,EAAUC,IAAMC,KAAK,SAAChB,GAGxB,IAAIA,EAAMiB,QAEN,OAAOhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,MAGX,IAAIX,EAAQP,EAAMiB,QAAQE,OAAOC,MAC7BC,EACArB,EAAMR,MAAM8B,IAAK,SAAA1B,GAAC,OAAIK,EAAAC,EAAAC,cAACoB,EAAD,CAAMf,QAASZ,EAAEY,QAASD,OAAUA,GAAkBV,IAAYY,WAAYb,EAAEa,eAErFM,IAAMS,YAU3B,OACIvB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEd,YACdU,EAAAC,EAAAC,cAAA,sBAEAF,EAAAC,EAAAC,cAACsB,EAAD,CAAqBC,SAZb,SAACC,GAEX3B,EAAM4B,QAAQD,EAAOE,gBAWnB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEb,OACZ6B,MAiBZI,EAAsBK,YAAU,CAClCC,KAAK,sBADmBD,CAXL,SAAC9B,GACpB,OAAOC,EAAAC,EAAAC,cAAA,QAAMuB,SAAW1B,EAAMgC,cAClB/B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOC,UAAWxB,EAAWyB,KAAM,cAAeC,YAAa,OAAQC,SAAU,CAACC,IAAU1B,MAEhGX,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,+BAULW,gEC5DaC,IAAMwB,iBC2CnBC,EA5Cc,SAACxC,GAAQ,IAAAyC,EAENC,oBAAS,GAFHC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE/BK,EAF+BH,EAAA,GAErBI,EAFqBJ,EAAA,GAAAK,EAGLN,mBAAS1C,EAAMnB,QAHVoE,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAG/BnE,EAH+BoE,EAAA,GAGvBC,EAHuBD,EAAA,GAItCE,oBAAU,WACND,EAAelD,EAAMnB,SACvB,CAACmB,EAAMnB,SAET,IASMuE,EAAiB,SAACC,GACjBA,EAAEC,cAAcC,MAAM5F,QAAU,KAC/BuF,EAAeG,EAAEC,cAAcC,QAKnC,OACItD,EAAAC,EAAAC,cAAA,YACM2C,GACE7C,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,QAAMqD,cApBF,WACnBT,GAAY,KAmB2C/C,EAAMnB,QAAU,SAD3D,OAIHiE,GACG7C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOsD,SAAUL,EAAgBM,WAAW,EAAMC,OAtB7C,SAACC,GACtBb,GAAY,GACZ/C,EAAMpB,aAAaC,IAoB2E0E,MAAO1E,IACrFoB,EAAAC,EAAAC,cAAA,WAAMtB,EAAOlB,OAAb,QACAsC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAQ0D,QAAST,GAAjB,YCTVU,EAvBK,SAAC9D,GACjB,OAAIA,EAAMiB,QAQFhB,EAAAC,EAAAC,cAAA,WAKIF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAE0D,kBACd9D,EAAAC,EAAAC,cAAA,OAAKG,IAAkC,MAA7BN,EAAMiB,QAAQE,OAAO6C,MAAehE,EAAMiB,QAAQE,OAAO6C,MAAQnE,MAC3EI,EAAAC,EAAAC,cAAC8D,EAAD,CAAwBpF,OAAQmB,EAAMnB,OAASD,aAAgBoB,EAAMpB,iBAb1EqB,EAAAC,EAAAC,cAACe,EAAA,EAAD,uBC+CAgD,EAFUC,YArBL,SAACP,GAEjB,MAAO,CACHpE,MAAOoE,EAAMQ,YAAY5E,MACzB6E,YAAaT,EAAMQ,YAAYC,YAC/BpD,QAAS2C,EAAMQ,YAAYnD,UAGZ,SAACqD,GAEpB,MAAO,CACHC,kBAAmB,SAACC,GAEhB,IAAIC,EAASC,YAA+BF,GAC5CF,EAASG,IAEb7C,QAAS,SAACyC,GAAeC,EAASK,YAAqBN,OAKtCF,CAA4CrD,GCzCtD8D,IATC,SAAC5E,GACb,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0E,EAAD,CAAa5D,QAASjB,EAAMiB,QAASpC,OAAUmB,EAAMnB,OAAQD,aAAgBoB,EAAMpB,eACnFqB,EAAAC,EAAAC,cAAC2E,EAAD,6FCGQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,sICVFC,EAAe,CACfC,MAAO,GAIPxH,SAAU,GACVyH,gBAAiB,EACjB7H,YAAa,EACb8H,YAAY,EACZC,oBAAqB,IAoFZC,EAAW,SAACJ,GAErB,MAAO,CACHK,KArGQ,YAsGRL,UAGKM,EAAiB,SAAClI,GAE3B,MAAO,CACHiI,KA3Ge,mBA4GfjI,gBAUKmI,EAAiB,SAACL,GAE3B,MAAM,CACFG,KAvHkB,qBAwHlBH,eAGKM,EAAwB,SAACN,EAAYnH,GAE9C,MAAM,CACFsH,KA7H4B,+BA8H5BH,aACAnH,WAsDO0H,EAvKa,WAC5B,IAD6BlC,EAC7BlG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADqC0H,EAAcX,EACnD/G,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACI,MArBW,WAqBR6G,EAAOiB,KAGO9C,OAAAmD,EAAA,EAAAnD,CAAA,GACNgB,EADM,CAETyB,MAAMzB,EAAMyB,MAAM/D,IAAI,SAAA0E,GAClB,OAAGA,EAAEC,KAAKxB,EAAOrG,OACNwE,OAAAmD,EAAA,EAAAnD,CAAA,GAAIoD,EAAX,CAAcE,UAAS,IAEpBF,MA/BN,aAqCLvB,EAAOiB,KAGE9C,OAAAmD,EAAA,EAAAnD,CAAA,GACNgB,EADM,CAETyB,MAAMzB,EAAMyB,MAAM/D,IAAI,SAAA0E,GAClB,OAAGA,EAAEC,KAAKxB,EAAOrG,OACNwE,OAAAmD,EAAA,EAAAnD,CAAA,GAAIoD,EAAX,CAAcE,UAAS,IAEpBF,MA5CP,cAmDJvB,EAAOiB,KAEX9C,OAAAmD,EAAA,EAAAnD,CAAA,GAAUgB,EAAV,CAAiByB,MAAOZ,EAAOY,QApDhB,qBAsDXZ,EAAOiB,KAEE9C,OAAAmD,EAAA,EAAAnD,CAAA,GAAOgB,EAAP,CAAcnG,YAAYgH,EAAOhH,cAvDxB,0BA0DlBgH,EAAOiB,KAEE9C,OAAAmD,EAAA,EAAAnD,CAAA,GAAOgB,EAAP,CAAc0B,gBAAgBb,EAAO0B,QA3DhC,uBA8Dd1B,EAAOiB,KAEJ9C,OAAAmD,EAAA,EAAAnD,CAAA,GAAIgB,EAAX,CAAkB2B,WAAWd,EAAOc,aA/DR,iCAiExBd,EAAOiB,KAGJ9C,OAAAmD,EAAA,EAAAnD,CAAA,GAAIgB,EAAX,CAAkB4B,oBAAqBf,EAAOc,WAAP3C,OAAAwD,EAAA,EAAAxD,CAC7BgB,EAAM4B,qBADuBzH,OAAA,CACF0G,EAAOrG,SACrC,CAACwF,EAAM4B,oBAAoBa,OAAO,SAAAJ,GAAE,OAAEA,GAAMxB,EAAOrG,YAKvDwF,WC7EPwB,EAAc,CACda,GAAI,KACJhH,MAAO,GACPD,MAAO,GACPuG,YAAY,EACZe,QAAO,GAgBEC,EAAgB,SAACN,EAAGhH,EAAMD,EAAOsH,GAAjB,MAA2B,CAACZ,KAxBrC,gCAwB0Dc,QAAQ,CAACP,KAAGhH,QAAMD,QAAOsH,YAE1FG,EAAkB,iCAAAC,EAAA9D,OAAA+D,EAAA,EAAA/D,CAAAgE,EAAA1G,EAAA2G,KAAM,SAAAC,EAAMxC,GAAN,IAAApG,EAAA6I,EAAAd,EAAAhH,EAAA+H,EAAA,OAAAJ,EAAA1G,EAAA+G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEZpK,IAAQ+B,KAFI,OAGJ,KADrBb,EAFyBgJ,EAAAG,MAGjBC,aACRP,EACyB7I,EAAKA,KAArB+H,EADTc,EACSd,GAAGhH,EADZ8H,EACY9H,MAAMD,EADlB+H,EACkB/H,MACdsF,EAASiC,EAAgBN,EAAGhH,EAAMD,GAAO,KANpB,wBAAAkI,EAAAK,SAAAT,EAAAU,SAAN,gBAAAC,GAAA,OAAAf,EAAAgB,MAAAF,KAAA9J,YAAA,IAmChBiK,EAjDG,WAA6B,IAA5B/D,EAA4BlG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB0H,EAAaX,EAAS/G,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAO6G,EAAOiB,MACV,IAdY,gCAeR,OAAA9C,OAAAmD,EAAA,EAAAnD,CAAA,GACOgB,EACAa,EAAO+B,QAFd,CAGIF,OAAO7B,EAAO+B,QAAQF,SAGlC,OAAO1C,qBCjBPwB,EAAc,CACdwC,aAAa,GA4BFC,EAxBE,WAA6B,IAA5BjE,EAA4BlG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB0H,EACpB,QAD0C1H,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC5B8H,MACV,IAVsB,0BAWlB,OAAA9C,OAAAmD,EAAA,EAAAnD,CAAA,GACOgB,EADP,CAEIgE,aAAa,IAGzB,OAAOhE,GCTPkE,EAAWC,YAAgB,CAC3B3D,YAAY4D,IACZC,YAAYC,IACZC,UAAUrC,EACVsC,KAAKT,EACL5F,KAAKsG,IACLC,IAAKT,IAGHU,EAAmBvD,OAAOwD,sCAAwCC,IACpEC,EAAMC,YAAYb,EAASS,EAAiBK,YAAgBC,OAChE7D,OAAO8D,UAAUJ,EAEFA,8HCRAK,EAXA,SAAC/I,GACZ,OAAOC,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAE2I,QACxB/I,EAAAC,EAAAC,cAAA,OAAKG,IAAI,6DACTL,EAAAC,EAAAC,cAAA,OAAKC,UAAaC,IAAE4I,YACnBjJ,EAAMsG,OACLrG,EAAAC,EAAAC,cAAA,eAAOH,EAAMhB,MAAb,MAAsBiB,EAAAC,EAAAC,cAAA,UAAQ0D,QAAS7D,EAAMZ,QAAvB,WAAtB,KACFa,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAASC,GAAM,UAAf,6BCmBOC,EAzBA,WACX,OACInJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEX,KACdO,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,MACdQ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAASC,GAAG,WAAWE,gBAAiBhJ,IAAEV,YAA1C,YAEJM,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAArC,OAAKsC,IAAEZ,KAAP,KAAA1B,OAAesC,IAAEiJ,SAC3BrJ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAASC,GAAG,WAAWE,gBAAiBhJ,IAAEV,YAA1C,aAEJM,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,MACdQ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAASC,GAAG,SAASE,gBAAiBhJ,IAAEV,YAAxC,UAEJM,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,MACdQ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAASC,GAAG,QAAQE,gBAAiBhJ,IAAEV,YAAvC,SAEJM,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,MACdQ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAASC,GAAG,SAASE,gBAAiBhJ,IAAEV,YAAxC,UAEJM,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,MACdQ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAASC,GAAG,YAAYE,gBAAiBhJ,IAAEV,YAA3C,mDCXD4J,UARF,WACT,OACItJ,EAAAC,EAAAC,cAAA,qBCMOqJ,UARD,WACV,OACIvJ,EAAAC,EAAAC,cAAA,uCCiBOsJ,GAnBE,WACb,OACIxJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEX,KACdO,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,MACdQ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAASC,GAAG,MAAME,gBAAiBhJ,IAAEV,YAArC,qBAEJM,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAArC,OAAKsC,IAAEZ,KAAP,KAAA1B,OAAesC,IAAEiJ,SAC3BrJ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAASC,GAAG,MAAME,gBAAiBhJ,IAAEV,YAArC,qBAEJM,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,MACdQ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAASC,GAAG,MAAME,gBAAiBhJ,IAAEV,YAArC,qBAEJM,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,MACdQ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAASC,GAAG,MAAME,gBAAiBhJ,IAAEV,YAArC,qICiCD+J,GA3CD,SAAC1J,GAUX,IARA,IAAI2J,EAAWC,KAAKC,KAAK7J,EAAMsF,gBAAgBtF,EAAMnC,UACjDiM,EAAQ,GAOHC,EAAE,EAAGA,GAAGJ,EAAYI,IAEzBD,EAAME,KAAKD,GAEf,IACIE,EAAaL,KAAKC,KAAKF,EADT,IAdClH,EAgBqBC,mBAAS,GAhB9BC,EAAAC,OAAAC,GAAA,EAAAD,CAAAH,EAAA,GAgBdyH,EAhBcvH,EAAA,GAgBCwH,EAhBDxH,EAAA,GAiBfyH,EAHc,IAGWF,EAAc,GAAe,EACtDG,EAJc,GAIWH,EAG7B,OACIjK,EAAAC,EAAAC,cAAA,OAAKC,UAAWkK,KAAOC,WAClBL,EAAc,GACfjK,EAAAC,EAAAC,cAAA,UAAQ0D,QAAS,WAAKsG,EAAiBD,EAAc,KAArD,QACCJ,EACAzD,OAAO,SAAAzG,GAAC,OAAEA,GAAGwK,GAAyBxK,GAAGyK,IACzC/I,IAAI,SAAC1B,GACF,OAAOK,EAAAC,EAAAC,cAAA,QAAMC,UAAYoK,KAAG5H,OAAA6H,GAAA,EAAA7H,CAAA,GACvB0H,KAAOI,WAAa1K,EAAMvC,cAAcmC,GAC1C0K,KAAOK,YACVC,IAAKhL,EACLiE,QAAS,SAACR,GACNrD,EAAM6K,cAAcjL,KACpBA,KAEPqK,EAAaC,GACdjK,EAAAC,EAAAC,cAAA,UAAQ0D,QAAS,WAAKsG,EAAiBD,EAAc,KAArD,UCsCGY,GAvEH,SAAC9K,GASb,IAPA,IAAI2J,EAAWC,KAAKC,KAAK7J,EAAMsF,gBAAgBtF,EAAMnC,UACjDiM,EAAQ,GAMHC,EAAEH,KAAKmB,IAAI/K,EAAMvC,YAAc,EAAG,GAAIsM,GAAKH,KAAKmB,IAAI,EAAGnB,KAAKoB,IAAIhL,EAAMvC,YAAc,EAAGkM,IAAcI,IAE1GD,EAAME,KAAKD,GAEX,OACI9J,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8K,GAAD,CAAW3F,gBAAiBtF,EAAMsF,gBAAiBzH,SAAUmC,EAAMnC,SAAUgN,cAAe7K,EAAM6K,cAAepN,YAAauC,EAAMvC,cAE/HuC,EAAMqF,MAAM/D,IAAI,SAAA0E,GAAC,OAAI/F,EAAAC,EAAAC,cAAA,OAAKyK,IAAK5E,EAAEC,IACnChG,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAASC,GAAI,YAAanD,EAAEC,IACzBhG,EAAAC,EAAAC,cAAA,OAAKG,IAAuB,MAAlB0F,EAAE7E,OAAOC,MAAgB4E,EAAE7E,OAAOC,MAAQvB,KAAWO,UAAWkK,KAAOzK,cAGxFI,EAAAC,EAAAC,cAAA,WACM6F,EAAEE,SAAWjG,EAAAC,EAAAC,cAAA,UAAQ+K,SAAUlL,EAAMwF,oBAAoB2F,KAAK,SAAAlF,GAAE,OAAEA,GAAID,EAAEC,KAAKpC,QAAS,WAUvF7D,EAAM1B,SAAS0H,EAAEC,MAVH,YAaShG,EAAAC,EAAAC,cAAA,UAAQ+K,SAAUlL,EAAMwF,oBAAoB2F,KAAK,SAAAlF,GAAE,OAAEA,GAAID,EAAEC,KAAKpC,QAAS,WAC3F7D,EAAM7B,OAAO6H,EAAEC,MADG,YAiBhChG,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,WAAM6F,EAAE7D,MACRlC,EAAAC,EAAAC,cAAA,WAAM6F,EAAEnH,SAEZoB,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,WAAM,sBACNF,EAAAC,EAAAC,cAAA,WAAM,sDCvEZ3C,GAAW,SAACoG,GACrB,OAAOA,EAAMuE,UAAU9C,OCQrB+F,IDH8BC,aAAgB7N,GAAU,SAAC6H,GAE3D,OAAOA,EAAMgB,OAAO,SAAAL,GAAC,OAAE,iNCWvB6E,cAAe,SAACF,GAQhBW,EAAKtL,MAAMuL,aAAaZ,EAAWW,EAAKtL,MAAMnC,8FAV9C2J,KAAKxH,MAAMwL,aAAahE,KAAKxH,MAAMvC,YAAY+J,KAAKxH,MAAMnC,2CAetD,OAAMoC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuL,SAAA,KACLjE,KAAKxH,MAAMuF,WAAatF,EAAAC,EAAAC,cAACe,GAAA,EAAD,MAAe,KACvCjB,EAAAC,EAAAC,cAACuL,GAAD,CAAOpG,gBAAiBkC,KAAKxH,MAAMsF,gBACpCzH,SAAU2J,KAAKxH,MAAMnC,SACrBJ,YAAa+J,KAAKxH,MAAMvC,YACxBoN,cAAerD,KAAKqD,cACpBxF,MAAOmC,KAAKxH,MAAMqF,MAClB/G,SAAUkJ,KAAKxH,MAAM1B,SACrBH,OAAQqJ,KAAKxH,MAAM7B,OACnB0H,wBAAyB2B,KAAKxH,MAAM6F,wBACpCL,oBAAqBgC,KAAKxH,MAAMwF,8BAjCXzE,IAAMwB,YAsGpBkG,IArCEkD,aAAiBP,IAqCnB3C,YAEXtE,aApDgB,SAACP,GACjB,MAAM,CAEFyB,MAAM7H,GAASoG,GACf/F,SDvDmB,SAAC+F,GACxB,OAAOA,EAAMuE,UAAUtK,SCsDT+N,CAAYhI,GACtB0B,gBDrD0B,SAAC1B,GAC/B,OAAOA,EAAMuE,UAAU7C,gBCoDHuG,CAAmBjI,GACnCnG,YDnDsB,SAACmG,GAC3B,OAAOA,EAAMuE,UAAU1K,YCkDNqO,CAAelI,GAC5B2B,WDjDqB,SAAC3B,GAC1B,OAAOA,EAAMuE,UAAU5C,WCgDPwG,CAAcnI,GAC1B4B,oBD/C8B,SAAC5B,GACnC,OAAOA,EAAMuE,UAAU3C,oBC8CEwG,CAAuBpI,KA4CxB,CACpBzF,OZ0Ca,SAACC,GAClB,OAAM,SAACkG,GACHA,EAASuB,GAAwB,EAAMzH,IACvCtB,IAASqB,OAAOC,GAAQJ,KAAK,SAAAE,GACL,GAAjBA,EAAKoJ,YAEJhD,EA9Ea,SAAClG,GAE1B,MAAO,CACHsH,KAvFO,SAwFPtH,UA0EiB6N,CAAc7N,IAE3BkG,EAASuB,GAAwB,EAAOzH,QYjD5CE,SZsDe,SAACF,GACpB,OAAM,SAACkG,GACHA,EAASuB,GAAwB,EAAMzH,IACvCtB,IAASwB,SAASF,GAAQJ,KAAK,SAAAE,GACP,GAAjBA,EAAKoJ,YAEJhD,EApFe,SAAClG,GAE5B,MAAO,CACHsH,KA/FS,WAgGTtH,UAgFiB8N,CAAgB9N,IAE7BkG,EAASuB,GAAwB,EAAOzH,QY7D5CuH,iBACAE,0BACA2F,aZkBmB,SAAC/N,EAAaI,GACrC,sBAAA6I,EAAA9D,OAAA+D,EAAA,EAAA/D,CAAAgE,EAAA1G,EAAA2G,KAAO,SAAAC,EAAOxC,GAAP,IAAApG,EAAA,OAAA0I,EAAA1G,EAAA+G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACP9C,EAASsB,GAAiB,IADnBsB,EAAAE,KAAA,EAEUtK,IAASU,SAASC,EAAYI,GAFxC,OAEHK,EAFGgJ,EAAAG,KAGK/C,EAASsB,GAAiB,IAC1BtB,EAASmB,EAASvH,EAAKiO,QACvB7H,EA3BN,CACFoB,KAjHsB,wBAkHtBS,MAyBoCjI,EAAKkO,aALtC,wBAAAlF,EAAAK,SAAAT,EAAAU,SAAP,gBAAAC,GAAA,OAAAf,EAAAgB,MAAAF,KAAA9J,YAAA,IYlBI6N,aZ0BmB,SAACZ,EAAY9M,GACpC,OAAM,SAACyG,GACKA,EAASqB,EAAegF,IACxBrG,EAASsB,GAAiB,IAClC9I,IAASU,SAASmN,EAAY9M,GAAUG,KAAK,SAAAE,GACzCoG,EAASsB,GAAiB,IAC1BtB,EAASmB,EAASvH,EAAKiO,cYxCpB1D,CAUb2C,KClHIiB,oLAgBF,OAAOpM,EAAAC,EAAAC,cAACmM,EAAW9E,KAAKxH,cAhBEe,IAAMwB,WAyBrB4B,gBANS,SAACP,GAAD,MACvB,CACG0C,OAAO1C,EAAMwE,KAAK9B,OAClBtH,MAAM4E,EAAMwE,KAAKpJ,QAGkB,CAAEI,OZmBX,iCAAAmN,EAAA3J,OAAA+D,EAAA,EAAA/D,CAAAgE,EAAA1G,EAAA2G,KAAM,SAAA2F,EAAOlI,GAAP,OAAAsC,EAAA1G,EAAA+G,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,OAGc,IADnBpK,IAAQoC,SAASpB,KAChBE,KAAKoJ,YAGbhD,EAASiC,EAAgB,KAAK,KAAK,MAAM,IAN7B,wBAAAkG,EAAAlF,SAAAiF,EAAAhF,SAAN,gBAAAkF,GAAA,OAAAH,EAAA7E,MAAAF,KAAA9J,YAAA,KYnBfyG,CAAmCkI,uECC5CM,GAAiB7K,aAAU,CAC7BC,KAAK,SADcD,CAzBN,SAAC9B,GACd,OACIC,EAAAC,EAAAC,cAAA,QAAMuB,SAAU1B,EAAMgC,cAClB/B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8B,GAAA,EAAD,CAAOE,KAAM,QAASD,UAAW0K,KAAOxK,YAAa,QAASC,SAAY,CAACC,SAE/ErC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8B,GAAA,EAAD,CAAOE,KAAM,WAAYD,UAAW0K,KAAOxK,YAAa,WAAYC,SAAY,CAACC,SAErFrC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8B,GAAA,EAAD,CAAOE,KAAM,aAAcD,UAAW0K,KAAOlH,KAAM,aADvD,gBAGE1F,EAAM6M,OACJ5M,EAAAC,EAAAC,cAAA,OAAKC,UAAW0M,KAAMC,kBACrB/M,EAAM6M,OAGX5M,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,2BAiCDgE,gBAHM,SAACP,GAAD,MAAU,CAC3B0C,OAAO1C,EAAMwE,KAAK9B,SAEiB,CAACtH,MbtBf,SAACC,EAAMC,EAAUC,GAAjB,sBAAA6N,EAAApK,OAAA+D,EAAA,EAAA/D,CAAAgE,EAAA1G,EAAA2G,KAAgC,SAAAoG,EAAM3I,GAAN,IAAArG,EAAAuC,EAAA,OAAAoG,EAAA1G,EAAA+G,KAAA,SAAAiG,GAAA,cAAAA,EAAA/F,KAAA+F,EAAA9F,MAAA,cAAA8F,EAAA9F,KAAA,EAEzBpK,IAAQgC,MAAMC,EAAMC,EAASC,GAFJ,OAGX,KAD9BlB,EAFyCiP,EAAA7F,MAG7BnJ,KAAKoJ,WAEbhD,EAASmC,MAILjG,EAAWvC,EAASC,KAAKiP,SAASxP,OAAO,EAAIM,EAASC,KAAKiP,SAAS,GAAK,cAC7E7I,EAAS8I,YAAW,QAAS,CAACC,OAAO7M,MAVA,wBAAA0M,EAAA3F,SAAA0F,EAAAzF,SAAhC,gBAAA8F,GAAA,OAAAN,EAAAtF,MAAAF,KAAA9J,YAAA,KasBVyG,CArBF,SAACnE,GAKV,OAAGA,EAAMsG,OACErG,EAAAC,EAAAC,cAACoN,GAAA,EAAD,CAAUpE,GAAI,YAIjBlJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACwM,GAAD,CAAgBjL,SAXX,SAAC8L,GACdxN,EAAMhB,MAAMwO,EAASvO,MAAOuO,EAAStO,SAAUsO,EAASrO,kBCnCnDsO,GAAe,SAAClL,GACzB,OAAO,SAACvC,GACR,OAAOC,EAAAC,EAAAC,cAACF,EAAAC,EAAMwN,SAAP,CAAgBC,SAAU1N,EAAAC,EAAAC,cAACe,GAAA,EAAD,OACxBjB,EAAAC,EAAAC,cAACoC,EAAcvC,MCWtB4N,GAAmB7M,IAAM8M,KAAK,kBAAIlR,EAAA0G,EAAA,GAAArF,KAAArB,EAAAmR,KAAA,aAClCC,GAAmBhN,IAAM8M,KAAK,kBAAIlR,EAAA0G,EAAA,GAAArF,KAAArB,EAAAmR,KAAA,aAElCE,+LAKExG,KAAKxH,MAAMiO,iDAIX,OAAIzG,KAAKxH,MAAM4H,YAMX3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAC+N,GAAD,MACAjO,EAAAC,EAAAC,cAACgO,EAAD,MACAlO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAOC,KAAK,WAAWC,OAASb,GAAaG,MAC7C3N,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAS,kBAAMrO,EAAAC,EAAAC,cAACoO,GAAD,SACpCtO,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAOC,KAAM,oBAAmBC,OAASb,GAAaM,MACtD9N,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAS,kBAAKrO,EAAAC,EAAAC,cAACqO,GAAD,SACnCvO,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAS,kBAAMrO,EAAAC,EAAAC,cAACsO,EAAD,SACnCxO,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAS,kBAAMrO,EAAAC,EAAAC,cAACuO,EAAD,SACpCzO,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAOC,KAAK,YAAYC,OAAS,kBAAMrO,EAAAC,EAAAC,cAACwO,GAAD,WAf5C1O,EAAAC,EAAAC,cAACe,GAAA,EAAD,aAVGH,IAAMwB,WAsCpBqM,GAAenG,YAAQoG,IAAY1K,aAJjB,SAACP,GAAD,MAAU,CAC5BgE,YAAahE,EAAM0E,IAAIV,cAGoC,CAACqG,cdtCnC,kBAAK,SAAC3J,GAC/B,IAAIwK,EAAUxK,EAASmC,KAEvBsI,QAAQC,IAAI,CAACF,IAAU9Q,KAAK,WACxBsG,EAN6B,CAACoB,KAnBR,kCc2DX+C,CAA+DuF,IAYlEiB,GAVU,SAACjP,GAExB,OAAQC,EAAAC,EAAAC,cAAC+O,EAAA,EAAD,KACKjP,EAAAC,EAAAC,cAACgP,GAAA,EAAD,CAAUzG,MAAOA,GACjBzI,EAAAC,EAAAC,cAACyO,GAAD,SCzDZQ,IAASd,OACLrO,EAAAC,EAAAC,cAACF,EAAAC,EAAMmP,WAAP,KACIpP,EAAAC,EAAAC,cAACgP,GAAA,EAAD,CAAUzG,MAAOA,GACjBzI,EAAAC,EAAAC,cAACmP,GAAD,QAGJC,SAASC,eAAe,SlBgH1B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3R,KAAK,SAAA4R,GACjCA,EAAaC,2SmB1HfzK,EAAe,CACf5F,MAAO,CACH,CAAEyG,GAAI,EAAGzF,QAAS,kBAAmBC,WAAY,IACjD,CAAEwF,GAAI,EAAGzF,QAAS,oBAAqBC,WAAY,KAEvD4D,YAAa,SACbpD,QAAQ,KACRpC,OAAQ,IA4CC6F,EAAiC,SAACF,GAE3C,MAAO,CACHkB,KA3DqB,uBA2DOoK,QAAQtL,IAG/BG,EAAuB,SAACN,GAEjC,MAAO,CACHqB,KAlES,WAmETrB,gBAGK0L,EAAgB,SAAC9O,GAE1B,MAAO,CACHyE,KAvEiB,mBAwEjBzE,YAIK+O,EAAW,SAACnR,GAErB,MAAO,CACH6G,KA9EW,aA+EX7G,WAYKoR,EAAe,SAAC7R,GAAD,sBAAAsI,EAAA9D,OAAAsN,EAAA,EAAAtN,CAAAuN,EAAAjQ,EAAA2G,KAAW,SAAAC,EAAMxC,GAAN,IAAApG,EAAA,OAAAiS,EAAAjQ,EAAA+G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGdtK,IAAS0B,WAAWJ,GAHN,OAG3BF,EAH2BgJ,EAAAG,KAI3B/C,EAASyL,EAAe7R,IAJG,wBAAAgJ,EAAAK,SAAAT,EAAAU,SAAX,gBAAAC,GAAA,OAAAf,EAAAgB,MAAAF,KAAA9J,YAAA,IAOfiB,EAAU,SAACP,GAAD,sBAAA4O,EAAApK,OAAAsN,EAAA,EAAAtN,CAAAuN,EAAAjQ,EAAA2G,KAAU,SAAAoG,EAAM3I,GAAN,IAAApG,EAAA,OAAAiS,EAAAjQ,EAAA+G,KAAA,SAAAiG,GAAA,cAAAA,EAAA/F,KAAA+F,EAAA9F,MAAA,cAAA8F,EAAA9F,KAAA,EAGRrK,IAAW4B,UAAUP,GAHb,OAGrBF,EAHqBgP,EAAA7F,KAIrB/C,EAAS0L,EAAU9R,IAJE,wBAAAgP,EAAA3F,SAAA0F,EAAAzF,SAAV,gBAAA8F,GAAA,OAAAN,EAAAtF,MAAAF,KAAA9J,YAAA,IAOVkB,EAAa,SAACC,GAAD,sBAAA0N,EAAA3J,OAAAsN,EAAA,EAAAtN,CAAAuN,EAAAjQ,EAAA2G,KAAU,SAAA2F,EAAMlI,GAAN,OAAA6L,EAAAjQ,EAAA+G,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,cAAAqF,EAAArF,KAAA,EAEPrK,IAAW6B,aAAaC,GAFjB,OAGM,IAHN4N,EAAApF,KAGZnJ,KAAKoJ,YAEjBhD,EAAS0L,EAAUnR,IALK,wBAAA4N,EAAAlF,SAAAiF,EAAAhF,SAAV,gBAAAkF,GAAA,OAAAH,EAAA7E,MAAAF,KAAA9J,YAAA,IASXsK,IArGe,WAC9B,IAD+BpE,EAC/BlG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADuC0H,EAAcX,EACrD/G,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACI,GAlBa,aAkBV6G,EAAOiB,KACV,CACI,IAAI0K,EAAU,CACVnK,GAAI,EACJzF,QAASiE,EAAOJ,YAChB5D,WAAY,MAQhB,OANamC,OAAAyN,EAAA,EAAAzN,CAAA,GACNgB,EADM,CAETpE,MAAMoD,OAAA0N,EAAA,EAAA1N,CAAIgB,EAAMpE,OAAXzB,OAAA,CAAiBqS,IACtB/L,YAAa,KAKhB,MAhCoB,yBAgCjBI,EAAOiB,KAEE9C,OAAAyN,EAAA,EAAAzN,CAAA,GACNgB,EADM,CAETS,YAAYI,EAAOqL,UAnCN,qBAwCbrL,EAAOiB,KAEJ9C,OAAAyN,EAAA,EAAAzN,CAAA,GAAIgB,EAAX,CAAkB3C,QAAQwD,EAAOxD,UAzCtB,eA2CPwD,EAAOiB,KAEJ9C,OAAAyN,EAAA,EAAAzN,CAAA,GAAIgB,EAAX,CAAkB/E,OAAO4F,EAAO5F,SA5CpB,gBA8CR4F,EAAOiB,KAEJ9C,OAAAyN,EAAA,EAAAzN,CAAA,GAAIgB,EAAX,CAAkBpE,MAAMoE,EAAMpE,MAAM6G,OAAO,SAAAzG,GAAC,OAAEA,EAAEqG,KAAKxB,EAAO8L,WAGzD3M,uFCxDPwB,EAAe,CACfoL,YAAa,CACT,CAAEvK,GAAI,EAAG9D,KAAM,QACf,CAAE8D,GAAI,EAAG9D,KAAM,QACf,CAAE8D,GAAI,EAAG9D,KAAM,SACf,CAAE8D,GAAI,EAAG9D,KAAM,WAEnBsO,YAAa,CACT,CAAExK,GAAI,EAAGzF,QAAS,MAClB,CAAEyF,GAAI,EAAGzF,QAAS,kBAClB,CAAEyF,GAAI,EAAGzF,QAAS,gBAkBbkQ,EAA2B,SAAClQ,GAErC,MAAM,CACFkF,KAjCY,cAiCOiL,QAASnQ,IAMrB0H,IAvBgB,WAC/B,IADgCtE,EAChClG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADwC0H,EAAcX,EACtD/G,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEK,MAnBe,gBAmBX6G,EAAOiB,KAEM9C,OAAAgO,EAAA,EAAAhO,CAAA,GACPgB,EADM,CAET6M,YAAY7N,OAAAiO,EAAA,EAAAjO,CAAIgB,EAAM6M,aAAX1S,OAAA,CAAwB,CAACkI,GAAG,EAAEzF,QAAQiE,EAAOkM,aAIzD/M,uBC1BXvE,EAAAC,QAAA,CAAkBI,IAAA,sBAAAD,KAAA,uBAAAE,WAAA,+DCDlB,IAAAmR,EAAAnU,EAAA,GAAAoU,EAAApU,EAAAqU,EAAAF,GAAAG,EAAAtU,EAAA,KAAAuU,EAAAvU,EAAAqU,EAAAC,GAOe/P,IAJD,SAAClB,GACX,OAAM+Q,EAAA7Q,EAAAC,cAAA,WAAK4Q,EAAA7Q,EAAAC,cAAA,OAAKG,IAAK6Q,4BCHzB9R,EAAAC,QAAA,CAAkB8R,YAAA,mCAAAvE,MAAA,6BAAAE,iBAAA,wLCoBLH,EAAO,SAAAI,GACpB,IADsBqE,EACtBrE,EADsBqE,MAAOC,EAC7BtE,EAD6BsE,KAAStR,EACtC4C,OAAA2O,EAAA,EAAA3O,CAAAoK,EAAA,kBACUwE,EAAYF,EAAKzE,OAASyE,EAAKG,QACrC,OACIC,EAAAxR,EAAAC,cAAA,OAAKC,UAAWkK,IAAO8G,YAAc,KAAOI,EAAWlH,IAAOuC,MAAQ,KAClE6E,EAAAxR,EAAAC,cAAA,WACIuR,EAAAxR,EAAAC,cAAA,QAAAyC,OAAA+O,OAAA,GAAWN,EAAWrR,KAEzBwR,GAAWE,EAAAxR,EAAAC,cAAA,YACPmR,EAAKzE,SAQTlM,EAAU,SAACA,GAAD,OAAa,SAAA4L,GACpC,IADsC8E,EACtC9E,EADsC8E,MAAOC,EAC7C/E,EAD6C+E,KAAStR,EACtD4C,OAAA2O,EAAA,EAAA3O,CAAA2J,EAAA,kBACUiF,EAAYF,EAAKzE,OAASyE,EAAKG,QAErC,OACIC,EAAAxR,EAAAC,cAAA,OAAKC,UAAWkK,IAAO8G,YAAc,KAAOI,EAAWlH,IAAOuC,MAAQ,KAClE6E,EAAAxR,EAAAC,cAAA,WACIuR,EAAAxR,EAAAC,cAACyR,EAADhP,OAAA+O,OAAA,GAAaN,EAAWrR,KAE3BwR,GAAWE,EAAAxR,EAAAC,cAAA,YACPmR,EAAKzE,2CChDtBlQ,EAAAC,EAAAC,EAAA,sBAAAyF,IAAA3F,EAAAC,EAAAC,EAAA,sBAAAgE,IAAO,IAAMyB,EAAW,SAAAiB,GAEpB,OAAGA,OACE,EAEM,qBAIF1C,EAAiB,SAACgR,GAAD,OAAe,SAAAtO,GAEzC,OAAIA,EAAM5F,OAAOkU,EACL,iBAAiBA,OAEzB,wBCdRxS,EAAAC,QAAiB3C,EAAAiD,EAAuB,iFCCxCP,EAAAC,QAAA,CAAkByE,iBAAA,2DCAlB1E,EAAAC,QAAA,CAAkB0J,OAAA,uBAAAC,WAAA,gDCAlB5J,EAAAC,QAAA,CAAkBiL,UAAA,6BAAAI,WAAA,8BAAA7K,aAAA,8KCGdgS,EAA2B,SAAClO,GAAD,MAAU,CACrC0C,OAAO1C,EAAMwE,KAAK9B,SAITqF,EAAmB,SAACpJ,GAAY,IACnCwP,EADmC,SAAAC,GAAA,SAAAD,IAAA,OAAAnP,OAAAqP,EAAA,EAAArP,CAAA4E,KAAAuK,GAAAnP,OAAAsP,EAAA,EAAAtP,CAAA4E,KAAA5E,OAAAuP,EAAA,EAAAvP,CAAAmP,GAAArK,MAAAF,KAAA9J,YAAA,OAAAkF,OAAAwP,EAAA,EAAAxP,CAAAmP,EAAAC,GAAApP,OAAAyP,EAAA,EAAAzP,CAAAmP,EAAA,EAAAnH,IAAA,SAAArH,MAAA,WAGjC,OAAKiE,KAAKxH,MAAMsG,OACTgM,EAAApS,EAAAC,cAACoC,EAAciF,KAAKxH,OADIsS,EAAApS,EAAAC,cAACoS,EAAA,EAAD,CAAUpJ,GAAG,eAHX4I,EAAA,CACThR,IAAMwB,WAUtC,OAFmC4B,YAAQ2N,EAAR3N,CAAoC4N","file":"static/js/main.b6d9ddff.chunk.js","sourcesContent":["import * as axios from \"axios\"\r\nimport { useDebugValue } from \"react\"\r\n\r\nexport const instance =  axios.create({\r\n    withCredentials:true,\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:{ \r\n        'API-KEY':'efcf8f75-f08f-4404-9dda-313fdbd0cfb3'}  \r\n})\r\n\r\nexport const usersAPI={\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`\r\n        ).then(response => response.data)\r\n    },\r\n    follow(userId=1)  {\r\n        return instance.post(`follow/${userId}`\r\n        ).then(response => response.data)\r\n    },\r\n    unfollow(userId=1)  {\r\n        return instance.delete(`follow/${userId}`\r\n        ).then(response => response.data)\r\n    },\r\n    getProfile(userId=1) {\r\n\r\n        console.warn(\"Obsolete method. Pleas profile API object \")\r\n\r\n        return profileAPI.getProfile(userId)\r\n    },      \r\n}\r\n\r\nexport const profileAPI={\r\n    getProfile(userId=1) {\r\n        return instance.get(`profile/${userId}`\r\n        ).then(response => response.data)\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/${userId}`\r\n        ).then(response => response.data)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`,{status:status}\r\n        ) \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport const authAPI={\r\n     Me() {\r\n        return (instance.get(`auth/me`\r\n        ).then(response => response.data))\r\n    },\r\n    login(email,password,rememberMe=false) {\r\n        return instance.post(`auth/login`, {email,password,rememberMe})\r\n        //.then(response => response.data))\r\n    },\r\n\r\n    logout() {\r\n        return (instance.delete(`auth/login`\r\n         ))\r\n         //.then(response => response.data))\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3k1SR\",\"posts\":\"MyPosts_posts__1aMU1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1jN-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__38aaP\",\"item\":\"Navbar_item__15Bum\",\"activeLink\":\"Navbar_activeLink__2wAMh\"};","module.exports = __webpack_public_path__ + \"static/media/Infinity-1s-200px.4ba43602.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__14cc0\",\"selectedPage\":\"users_selectedPage__126xK\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src={props.avatar}/>\r\n        { props.message}\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { updateNewPostTextActionCreator, addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm } from 'redux-form'\r\nimport {maxLengthCreator, required} from './../../../utils/validators/validators'\r\nimport { Textarea, Element} from '../../common/FormsControls/formsControls';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport userPhoto from './../../../assets/images/51f6fb256629fc755b8870c801092942.png'\r\n\r\n\r\n\r\nconst Textarea1 = Element(\"textarea\")\r\nlet maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n\r\n    if(!props.profile)\r\n    {\r\n        return <Preloader/>\r\n    }\r\n        debugger\r\n    let avatar =props.profile.photos.small;\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} avatar = {avatar ? avatar : userPhoto } likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();             //указатель\r\n\r\n    let onAddPost = (values) => {\r\n          //props.updateNewPostText(values.newPostBody)\r\n          props.addPost(values.newPostBody)                                  //текст является значением указателя из текстэрии\r\n        //props.dispatch(addPostActionCreator());                                //в функцию из пропсов добовляется значение из текстэрии\r\n       // props.updateNewPostText('');                 //пустая строка в текстэрии\r\n    }\r\n     \r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n\r\n            <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst addNewPostForm = (props)=>{\r\n    return <form onSubmit ={props.handleSubmit}>\r\n                <div>\r\n                    <Field component={Textarea1} name={\"newPostBody\"} placeholder={\"text\"} validate={[required, maxLength10]}/>\r\n                </div>\r\n                <div>\r\n                    <button> Add post</button>        \r\n                </div>\r\n            </form>\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form:'postAddMessageForm'\r\n})(addNewPostForm) \r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nclass ProfileStatus extends React.Component \r\n{\r\n    state = {\r\n        editMode: false,\r\n        status:this.props.status\r\n        \r\n        }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode:true\r\n        \r\n        });\r\n    }\r\n    deActivateEditMode = () => {\r\n        this.setState({\r\n            editMode:false\r\n        });\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n\t\tif(e.currentTarget.value.length <= 300) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tstatus: e.currentTarget.value,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        debugger\r\n        if(prevProps.status !== this.props.status)\r\n        this.setState({\r\n            status:this.props.status\r\n        })\r\n    }\r\n    \r\n    render( ) { \r\n        return (\r\n            <div> \r\n                {!this.state.editMode && \r\n                    <div>\r\n                       <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-----\"}</span>npm \r\n                  </div>\r\n                }\r\n                {this.state.editMode && \r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActivateEditMode} value={this.state.status}/>\r\n                        <div>{this.state.status.length}/300</div>\r\n                        <div><button onClick={this.onStatusChange}>save</button></div>\r\n                        \r\n                    </div>\r\n                }   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React, { useState,  useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks=(props)=>{\r\n\r\nconst [editMode, setEditMode] = useState(false);\r\nconst [status, setStatusLocal] = useState(props.status);\r\nuseEffect(()=>{\r\n    setStatusLocal(props.status);\r\n},[props.status])\r\n\r\nconst activateEditMode=()=>{\r\n    setEditMode(true)\r\n}\r\nconst deactivateEditMode=(state)=>{\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n}\r\n\r\n\r\nconst onStatusChange = (e) => {\r\n    if(e.currentTarget.value.length <= 300) {\r\n        setStatusLocal(e.currentTarget.value)\r\n    }\r\n}\r\n\r\n\r\n    return (\r\n        <div> \r\n            {!editMode && \r\n                <div>\r\n                   <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>npm \r\n              </div>\r\n            }\r\n            {editMode && \r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                    <div>{status.length}/300</div>\r\n                    <div><button onClick={onStatusChange}>save</button></div>\r\n                    \r\n                </div>\r\n            }   \r\n        </div>)\r\n\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from './../../common/Preloader/Preloader'\r\nimport userPhoto from './../../../assets/images/51f6fb256629fc755b8870c801092942.png'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile)\r\n    {\r\n        return <Preloader/>\r\n    }\r\n    else\r\n    { \r\n        debugger;\r\n        return (\r\n            <div>\r\n                {/* <div>\r\n                    <img\r\n                        src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>\r\n                </div> */}\r\n                <div className={s.descriptionBlock}>\r\n                    <img src={props.profile.photos.large !=null ? props.profile.photos.large : userPhoto }/>\r\n                    <ProfileStatusWithHooks status={props.status}  updateStatus = {props.updateStatus} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport { updateNewPostTextActionCreator, addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport StoreContext from '../../../StoreContext';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux'\r\n\r\n// const MyPostsContainer = (props) => {\r\n\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             { (store) => {\r\n//                 let state = store.getState()\r\n//                 let addPost = () => {\r\n                    \r\n//                     store.dispatch(addPostActionCreator());                            \r\n//                     // props.updateNewPostText('');                 \r\n//                 }\r\n\r\n//                 let onPostChange = (text) => {\r\n\r\n//                     let action = updateNewPostTextActionCreator(text);\r\n//                     store.dispatch(action);\r\n\r\n//                 }\r\n                \r\n//                 return < MyPosts updateNewPostText={onPostChange}\r\n//                     addPost={addPost}\r\n//                     posts={state.profilePage.posts}\r\n//                     newPostText={state.profilePage.newPostText} />\r\n//             }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\nlet mapStateToProps=(state)=>\r\n{\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n    }\r\n}\r\nlet mapDispatchToProps=(dispatch)=>\r\n{\r\n    return {\r\n        updateNewPostText: (text)=>\r\n        {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action)\r\n        },\r\n        addPost: (newPostText)=>{dispatch(addPostActionCreator(newPostText))}\r\n        \r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status = {props.status} updateStatus = {props.updateStatus}/>\r\n            <MyPostsContainer  /*store = {props.store}*/ />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {usersAPI} from '.././api/api'\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst FOLLOW = 'FOLLOW';\r\nconst SET_USERS='SET_USERS';\r\nconst SET_CURRENT_PAGE='SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING ='TOGGLE_IS_FETCHING' \r\nconst TOGGLE_IS_FOLLOWING_PROGRESS ='TOGGLE_IS_FOLLOWING_PROGRESS'\r\nlet initialState = {\r\n    users: [\r\n        // { id: 1, photoUrl:'https://99px.ru/sstorage/56/2019/09/mid_324597_239159.jpg', followed:false, fullName: 'Ivan', status: 'im a boss', location:{city:'Minsk',country:'Belarus'} },\r\n        // { id: 2, photoUrl:'https://99px.ru/sstorage/56/2019/09/mid_324597_239159.jpg', followed:true, fullName: 'artiom', status: 'im busy now', location:{city:'Moscow',country:'Russian'} },\r\n    ],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n\r\n}\r\n\r\nexport const UsersReducer = (state = initialState, action) =>\r\n{\r\n    if(action.type ===FOLLOW)\r\n    {\r\n  \r\n        let stateCopy ={\r\n            ...state,\r\n            users:state.users.map(u=>{\r\n                if(u.id===action.userId){\r\n                    return {...u, followed:true}\r\n                }\r\n                return u\r\n            }),\r\n        } \r\n    \r\n        return stateCopy\r\n    }\r\n    else if(action.type ===UNFOLLOW)\r\n    {\r\n  \r\n        let stateCopy ={\r\n            ...state,\r\n            users:state.users.map(u=>{\r\n                if(u.id===action.userId){\r\n                    return {...u, followed:false}\r\n                }\r\n                return u\r\n            }),\r\n        } \r\n    \r\n        return stateCopy\r\n        \r\n    }\r\n    else if(action.type ===SET_USERS)\r\n    {\r\n        return{...state, users: action.users}\r\n    }\r\n    else if(action.type===SET_CURRENT_PAGE)\r\n    {\r\n        let stateCopy = {...state, currentPage:action.currentPage}\r\n        return stateCopy\r\n    }\r\n    else if(action.type===SET_TOTAL_USERS_COUNT)\r\n    {\r\n        let stateCopy = {...state, totalUsersCount:action.count}\r\n        return stateCopy\r\n    }\r\n    else if(action.type===TOGGLE_IS_FETCHING)\r\n    {\r\n        return {...state, isFetching:action.isFetching}\r\n    }\r\n    else if(action.type===TOGGLE_IS_FOLLOWING_PROGRESS)\r\n    {\r\n\r\n        return {...state, followingInProgress: action.isFetching  \r\n            ? [...state.followingInProgress, action.userId] \r\n             : [state.followingInProgress.filter(id=>id != action.userId)]}\r\n        \r\n\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) =>\r\n{\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n}\r\nexport const unfollowSuccess = (userId) =>\r\n{\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) =>\r\n{\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\nexport const setCurrentPage = (currentPage) =>\r\n{\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n}\r\nexport const setTotalUsersCount=(totalUsersCount)=>\r\n{\r\n    return{ \r\n        type:SET_TOTAL_USERS_COUNT,\r\n        count:totalUsersCount\r\n    }\r\n}\r\nexport const toggleIsFetching=(isFetching)=>\r\n{\r\n    return{ \r\n        type:TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\nexport const toggleFollowingProgress=(isFetching, userId)=>\r\n{\r\n    return{ \r\n        type:TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    }\r\n}\r\n\r\nexport  const requestUsers=(currentPage, pageSize) =>{  \r\n    return async (dispatch)=>{ \r\n    dispatch(toggleIsFetching(true))\r\n    let data = await usersAPI.getUsers(currentPage,pageSize)\r\n                dispatch(toggleIsFetching(false))\r\n                dispatch(setUsers(data.items))\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\nexport  const usersChanged=(pageNumber, pageSize) =>{  \r\n    return(dispatch)=>{ \r\n                dispatch(setCurrentPage(pageNumber))\r\n                dispatch(toggleIsFetching(true))\r\n        usersAPI.getUsers(pageNumber, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n        })\r\n    }\r\n}\r\n\r\nexport  const follow=(userId) =>{  \r\n    return(dispatch)=>{ \r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.follow(userId).then(data=>{\r\n            if(data.resultCode==0)\r\n            {\r\n                dispatch(followSuccess(userId))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n\r\n        })\r\n    }\r\n}\r\nexport  const unfollow=(userId) =>{  \r\n    return(dispatch)=>{ \r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.unfollow(userId).then(data=>{\r\n            if(data.resultCode==0)\r\n            {\r\n                dispatch(unfollowSuccess(userId))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default UsersReducer","import { stopSubmit } from 'redux-form'\r\nimport {authAPI} from '.././api/api'\r\nconst SET_USER_DATA='samurai-network/SET_USER_DATA'\r\n\r\n\r\nlet initialState ={\r\n    id: null,\r\n    email: '',\r\n    login: '',\r\n    isFetching: false,\r\n    isAuth:false\r\n\r\n}\r\n\r\nconst authReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case SET_USER_DATA:\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n                isAuth:action.payload.isAuth\r\n            }\r\n    }\r\n    return state\r\n}\r\n\r\nexport const setAuthUserData=(id,email,login, isAuth)=>({type: SET_USER_DATA, payload:{id,email,login, isAuth}})\r\n\r\nexport const getAuthUserData = () => async(dispatch)=>{\r\n    //return(dispatch)=>{\r\n        let data = await authAPI.Me()\r\n            if(data.resultCode===0)\r\n            {\r\n                let {id,email,login}=data.data\r\n                dispatch(setAuthUserData(id,email,login, true));\r\n            }\r\n    }\r\n\r\n\r\n    export const login = (email,password, rememberMe) => async(dispatch)=>{\r\n\r\n            let response =await authAPI.login(email,password,rememberMe)\r\n                if(response.data.resultCode===0)\r\n                {\r\n                    dispatch(getAuthUserData())\r\n                }\r\n                else\r\n                {\r\n                    let message =  response.data.messages.length>0 ? response.data.messages[0] : \" some error\"\r\n                    dispatch(stopSubmit(\"login\", {_error:message}))\r\n                }\r\n        }\r\n        \r\n        export const logout = () => async (dispatch)=>{\r\n          //  return(dispatch)=>{\r\n                let response = authAPI.logout().then\r\n                    if(response.data.resultCode===0)\r\n                    {\r\n    \r\n                        dispatch(setAuthUserData(null,null,null, false));\r\n                    }\r\n            }\r\n\r\nexport default authReducer;","import { stopSubmit } from 'redux-form'\r\nimport {authAPI} from '.././api/api'\r\nimport { getAuthUserData } from './auth-reducer'\r\nconst SET_INITIALIZED_SUCCESS='SET_INITIALIZED_SUCCESS'\r\n\r\n\r\nlet initialState ={\r\n    initialized: false,\r\n\r\n}\r\n\r\nconst appReducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case SET_INITIALIZED_SUCCESS:\r\n            return{\r\n                ...state,\r\n                initialized: true\r\n            } \r\n    }\r\n    return state\r\n}\r\n\r\nexport const initializedSuccess=()=>({type: SET_INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () =>(dispatch)=>{\r\n    let promise = dispatch(getAuthUserData())\r\n    debugger\r\n    Promise.all([promise]).then(()=>{\r\n        dispatch(initializedSuccess())\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\nexport default appReducer;","//const { createStore } = require(\"redux\");\r\nimport {applyMiddleware, combineReducers, createStore,compose} from \"redux\"\r\nimport ProfileReducer from \"./profile-reducer\"\r\nimport DialogsReducer from \"./dialogs-reducer\"\r\nimport UsersReducer from \"./users-reducer \";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage:ProfileReducer,\r\n    dialogsPage:DialogsReducer,\r\n    usersPage:UsersReducer,\r\n    auth:authReducer,\r\n    form:formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet store=createStore(reducers,composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__=store\r\n\r\nexport default store","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n        <div className = {s.loginBlock}>\r\n        {props.isAuth \r\n        ? <div> {props.login} - <button onClick={props.logout}> logout</button> </div> :\r\n        <NavLink to = {'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './News.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            news\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './settings.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/ps\" activeClassName={s.activeLink}>Profile settings</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/ms\" activeClassName={s.activeLink}>message settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/ps\" activeClassName={s.activeLink}>Private settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/bl\" activeClassName={s.activeLink}>Black list</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React, { useState } from 'react'\r\nimport styles from'./Paginator.module.css' \r\nimport cn from \"classnames\"\r\n\r\n\r\n\r\n\r\nlet Paginator=(props)=>{\r\n\r\n    let pagesCount=Math.ceil(props.totalUsersCount/props.pageSize)\r\n    let pages = []\r\n    \r\n    debugger;\r\n    // for (let i=Math.max(props.currentPage - 5, 1); i <= Math.max(1, Math.min(props.currentPage + 5, pagesCount)); i++) \r\n    //     {\r\n    //         pages.push(i);\r\n    //     }\r\n    for (let i=1; i<=pagesCount; i++) \r\n    {\r\n        pages.push(i);\r\n    }\r\n    let portionSize = 10\r\n    let portionCount=Math.ceil(pagesCount/portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNUmber = (portionNumber-1)*portionSize+1\r\n    let rightPortionPageNUmber = portionNumber*portionSize\r\n\r\ndebugger    \r\n    return(\r\n        <div className={styles.paginator}>\r\n            {portionNumber>1 &&\r\n            <button onClick={()=>{setPortionNumber(portionNumber-1)}}>Prev</button>}\r\n            {pages\r\n            .filter(p=>p>=leftPortionPageNUmber && p<=rightPortionPageNUmber)\r\n            .map((p)=>{\r\n                return <span className ={cn({\r\n                    [styles.selectPage]: props.currentPage===p\r\n                }, styles.pageNumber)}\r\n                key={p}\r\n                onClick={(e)=>{\r\n                    props.onPageChanged(p)\r\n                }}>{p}</span>\r\n            })}\r\n            {portionCount>portionNumber &&\r\n            <button onClick={()=>{setPortionNumber(portionNumber+1)}}>Next</button>\r\n            }\r\n        </div>\r\n    )   \r\n} \r\n\r\nexport default Paginator","import React from 'react'\r\nimport styles from'./users.module.css' \r\nimport userPhoto from '../../assets/images/51f6fb256629fc755b8870c801092942.png'\r\nimport { NavLink } from 'react-router-dom'\r\nimport * as axios from 'axios'\r\nimport { profileAPI, usersAPI } from '../../api/api'\r\nimport Paginator from '../common/Paginator/Paginator'\r\n \r\n\r\n\r\n\r\nlet Users = (props)=>{\r\n\r\nlet pagesCount=Math.ceil(props.totalUsersCount/props.pageSize)\r\nlet pages = []\r\n// for(let i=1;i<=pagesCount;i++)\r\n// {\r\n//     pages.push(i);\r\n// }\r\ndebugger;\r\nfor (let i=Math.max(props.currentPage - 5, 1); i <= Math.max(1, Math.min(props.currentPage + 5, pagesCount)); i++) \r\n{\r\n    pages.push(i);\r\n}\r\n    return ( \r\n        <div>\r\n        <Paginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize} onPageChanged={props.onPageChanged} currentPage={props.currentPage}/>\r\n           { \r\n             props.users.map(u => <div key={u.id}>\r\n           <span>\r\n               <div>\r\n                   <NavLink to={'/profile/'+ u.id}>\r\n                      <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                    </NavLink>\r\n               </div>\r\n               <div>\r\n                   { u.followed ? <button disabled={props.followingInProgress.some(id=>id==u.id)} onClick={()=>{  \r\n                    //    props.toggleFollowingProgress(true, u.id);\r\n                    //    usersAPI.unfollow(u.id).then(data=>{\r\n                    //         if(data.resultCode==0)\r\n                    //         {\r\n                    //             props.unfollowSuccess(u.id);\r\n                \r\n                    //         }\r\n                    //         props.toggleFollowingProgress(false,u.id);\r\n                    //     })\r\n                    props.unfollow(u.id)\r\n            \r\n                \r\n                     }}>Unfollow</button>: <button disabled={props.followingInProgress.some(id=>id==u.id)} onClick={()=>{  \r\n                         props.follow(u.id)\r\n                        // props.toggleFollowingProgress(true, u.id);\r\n                        // usersAPI.follow(u.id).then(data=>{\r\n                        //     if(data.resultCode==0)\r\n                        //     {\r\n                        //         props.followSucess(u.id);\r\n                        //     }\r\n                        //     props.toggleFollowingProgress(false, u.id);\r\n            \r\n                        // })\r\n\r\n                          \r\n                          }}>Follow</button>}\r\n               </div>\r\n           </span>\r\n\r\n           <span>\r\n               <span>\r\n                   <div>{u.name}</div>\r\n                   <div>{u.status}</div>\r\n               </span>\r\n               <span>\r\n                   <div>{\"u.location.country\"}</div>\r\n                   <div>{\"u.location.city\"}</div>\r\n               </span>\r\n           </span>\r\n           </div>)\r\n       }\r\n       </div>\r\n       )\r\n}\r\n\r\nexport default Users","import { createSelector } from \"reselect\"\r\n\r\nexport const getUsers = (state)=>{\r\n    return state.usersPage.users\r\n} \r\nexport const getUsersSelector = (state)=>{\r\n    return getUsers(state).filter(u=>true)\r\n}  \r\nexport const getUsersSuperSelector =createSelector( getUsers, (users)=>{\r\n\r\n    return users.filter(u=>true)\r\n})\r\nexport const getPageSize = (state)=>{\r\n    return state.usersPage.pageSize\r\n} \r\nexport const getTotalUsersCount = (state)=>{\r\n    return state.usersPage.totalUsersCount\r\n} \r\nexport const getCurrentPage = (state)=>{\r\n    return state.usersPage.currentPage\r\n} \r\nexport const getIsFetching = (state)=>{\r\n    return state.usersPage.isFetching\r\n} \r\nexport const getFollowingInProgress = (state)=>{\r\n    return state.usersPage.followingInProgress\r\n} \r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport{ follow,  unfollow,setCurrentPage, toggleFollowingProgress,requestUsers,usersChanged } from '../../redux/users-reducer '\r\nimport * as axios from 'axios'\r\nimport Users from './User'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport {usersAPI} from '../../api/api'\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect'\r\nimport { compose } from 'redux'\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers,getUsersSuperSelector } from '../../redux/users-selectors'\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount(){\r\n    //         this.props.toggleIsFetching(true);\r\n    // usersAPI.getUsers(this.props.currentPage,this.props.pageSize).then(data=>{\r\n    //         this.props.toggleIsFetching(false);\r\n    //         this.props.setUsers(data.items)\r\n    //             this.props.setTotalUsersCount(data.totalCount)\r\n    //     })\r\n    this.props.requestUsers(this.props.currentPage,this.props.pageSize)\r\n    }\r\n    onPageChanged= (pageNumber)=>{\r\n    //     this.props.setCurrentPage(pageNumber)\r\n    //     this.props.toggleIsFetching(true);\r\n    // usersAPI.getUsers(pageNumber,this.props.pageSize).then(data=>{\r\n    //         this.props.toggleIsFetching(false);    \r\n    //     this.props.setUsers(data.items )\r\n \r\n    //     })\r\n    this.props.usersChanged(pageNumber,this.props.pageSize)\r\n    }\r\n\r\n\r\n    render() {\r\n        return<>\r\n        {this.props.isFetching ? <Preloader/> : null}\r\n         <Users totalUsersCount={this.props.totalUsersCount}\r\n        pageSize={this.props.pageSize}\r\n        currentPage={this.props.currentPage}\r\n        onPageChanged={this.onPageChanged}\r\n        users={this.props.users}\r\n        unfollow={this.props.unfollow}\r\n        follow={this.props.follow}\r\n        toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n        followingInProgress={this.props.followingInProgress} /> \r\n        </>\r\n    }\r\n}\r\n \r\n\r\n\r\n// let mapStateToProps=(state)=>{\r\n//     return{\r\n//         users:state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n      \r\n        users:getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount:getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nlet WithRedirect=withAuthRedirect(UsersContainer)\r\n\r\n// let mapDispatchToProps=(dispatch )=>{\r\n//     return{\r\n//         follow:(userID)=>{\r\n//             dispatch(followAC(userID))\r\n//         },\r\n//         unfollow:(userID)=>{\r\n//             dispatch(unfollowAC(userID))\r\n//         },\r\n//         setUsers:(users)=>{\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage:(pageNumber)=>{\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount:(totalCount)=>{\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching:(isFetching)=>\r\n//         {dispatch(toggleIsFetchingAC(isFetching))}\r\n        \r\n//     }\r\n// }\r\n\r\n// export default withAuthRedirect(connect(mapStateToProps,{      \r\n// follow,\r\n// unfollow,\r\n// setUsers,\r\n// setCurrentPage,\r\n// setTotalUsersCount, \r\n// toggleIsFetching,\r\n// toggleFollowingProgress,\r\n// getUsers,\r\n// usersChanged\r\n// })(UsersContainer))\r\n\r\nexport default compose(\r\n\r\n    connect(mapStateToProps,{      \r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        requestUsers,\r\n        usersChanged\r\n        })\r\n)(UsersContainer)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport s from './Header.module.css';\r\nimport * as axios from 'axios'\r\nimport { connect } from 'react-redux';\r\nimport { getAuthUserData, logout, setAuthUserData } from '../../redux/auth-reducer';\r\nimport { authAPI } from '../../api/api';\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n    // componentDidMount()\r\n    // {\r\n    //     // authAPI.Me().then(data=>{\r\n    //     //     if(data.resultCode===0)\r\n    //     //     {\r\n    //     //         let {id,email,login}=data.data\r\n    //     //         this.props.setAuthUserData(id,email,login);\r\n    //     //     }\r\n    //     // })\r\n    //     this.props.getAuthUserData()\r\n    // }\r\n\r\n    render(){\r\n\r\n    return <Header {...this.props}/>\r\n}\r\n}\r\nconst mapStateToProps = (state)=>\r\n({\r\n    isAuth:state.auth.isAuth,\r\n    login:state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps,{ logout})(HeaderContainer);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router'\r\nimport {Field, reduxForm } from 'redux-form'\r\nimport { login, logout } from '../../redux/auth-reducer'\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators'\r\nimport { Element } from '../common/FormsControls/formsControls'\r\nimport { Input } from '../common/FormsControls/formsControls'\r\nimport style from '../common/FormsControls/formsControls.module.css'\r\n\r\nconst LoginForm =(props)=>{\r\n    return( \r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"email\"} component={Input} placeholder={\"Email\"} validate = {[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field name={\"password\"} component={Input} placeholder={\"Password\"} validate = {[required]} />\r\n            </div>\r\n            <div>\r\n                <Field name={\"rememberMe\"} component={Input} type={\"checkbox\"}/> Remember me\r\n            </div>\r\n            { props.error &&\r\n                <div className={style.FormSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n        )\r\n        \r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form:'login'\r\n})(LoginForm) \r\n\r\n\r\nconst Login =(props)=>{\r\n    const onSubmit = (formData)=>{\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if(props.isAuth){\r\n        return <Redirect to={\"profile\"}/>\r\n    }\r\n    else{\r\n        return ( \r\n            <div>\r\n                <h1>Login</h1>\r\n                <LoginReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n            )\r\n    }\r\n        \r\n}\r\nconst mapSateToProps=(state)=>({\r\n    isAuth:state.auth.isAuth\r\n})\r\nexport default connect(mapSateToProps, {login})(Login)\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from 'react-redux'\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\n\r\nexport const withSuspense = (Component)=>{\r\n    return (props)=>{ \r\n    return <React.Suspense fallback={<Preloader/>}> \r\n             <Component {...props} />\r\n     </React.Suspense>\r\n    };\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Profile from './components/Profile/Profile';\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport News from './components/News/news'\r\nimport Music from './components/Music/music'\r\nimport Settings from './components/Settings/settings'\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginPage from './components/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport { getAuthUserData } from './redux/auth-reducer';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport {Provider} from \"react-redux\";\r\nimport { compose } from 'redux'\r\nimport store from \"./redux/redux-store\";\r\nimport { withSuspense } from './hoc/SuspenseHoc';\r\n\r\nconst DialogsContainer = React.lazy(()=>import( \"./components/Dialogs/DialogsContainer\"))\r\nconst ProfileContainer = React.lazy(()=>import( './components/Profile/ProfileContainer'))\r\n\r\nclass App extends React.Component  {\r\n\r\n    componentDidMount()\r\n    {\r\n\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render(){ \r\n        if(!this.props.initialized){ \r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n       // <BrowserRouter>\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer />\r\n                <Navbar />\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs' render={ withSuspense(DialogsContainer)}/>\r\n                    <Route path='/login' render={ () => <LoginPage /> }/>\r\n                    <Route path ='/profile/:userId?'render={ withSuspense(ProfileContainer)}/>\r\n                    <Route path='/users' render={ () =><UsersContainer/> }/>\r\n                    <Route path='/news' render={ () => <News /> }/>\r\n                    <Route path='/music' render={ () => <Music /> }/>\r\n                    <Route path='/settings' render={ () => <Settings /> }/>\r\n                </div>\r\n            </div>\r\n           // </BrowserRouter>\r\n        )\r\n    }\r\n        \r\n}\r\n\r\nconst mapStateToProps=(state)=>({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(withRouter, connect(mapStateToProps,{initializeApp})) (App);\r\n\r\nexport let samuraiJsAPP = (props)=>{\r\n\r\n   return( <BrowserRouter>\r\n                <Provider store={store}>\r\n                <AppContainer/>\r\n                </Provider>\r\n            </BrowserRouter> )\r\n\r\n}\r\n\r\n export default samuraiJsAPP;","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n            <App />\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n\r\n\r\n//rerenderEntireTree(store.getState());\r\n\r\n// store.subscribe(()=>{\r\n//     let state = store.getState()\r\n//     rerenderEntireTree(state)}\r\n// );\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { connect } from \"react-redux\";\r\nimport {usersAPI,profileAPI} from '.././api/api'\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'My name is Ivan', likesCount: 12 },\r\n        { id: 2, message: 'i kill everything', likesCount: 22 },\r\n    ],\r\n    newPostText: 'roscha',\r\n    profile:null,\r\n    status: \"\",\r\n}\r\n\r\nexport const ProfileReducer = (state = initialState, action) =>\r\n{\r\n    if(action.type ===ADD_POST)\r\n    {\r\n        let newPost = {\r\n            id: 5,\r\n            message: action.newPostText,\r\n            likesCount: 1222\r\n        };\r\n        let stateCopy ={\r\n            ...state,\r\n            posts:[...state.posts,newPost],\r\n            newPostText: ''\r\n        } \r\n    \r\n        return stateCopy\r\n    }\r\n    else if(action.type ===UPDATE_NEW_POST_TEXT)\r\n    {\r\n        let stateCopy ={\r\n            ...state,\r\n            newPostText:action.newText\r\n        }  \r\n        return stateCopy;\r\n        \r\n    }\r\n    else if(action.type ===SET_USER_PROFILE)\r\n    {\r\n        return {...state, profile:action.profile }\r\n    }\r\n    else if(action.type ===SET_STATUS)\r\n    {\r\n        return {...state, status:action.status }\r\n    }\r\n    else if(action.type ===DELETE_POST)\r\n    {\r\n        return {...state, posts:state.posts.filter(p=>p.id!==action.postId) }\r\n    }\r\n\r\n    return state;\r\n}\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n{\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT, newText:text\r\n    }\r\n}\r\nexport const addPostActionCreator = (newPostText) =>\r\n{\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    }\r\n}\r\nexport const setUserProfile =(profile)=>\r\n{\r\n    return {\r\n        type:SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\nexport const setStatus =(status)=>\r\n{\r\n    return {\r\n        type:SET_STATUS,\r\n        status\r\n    }\r\n}\r\nexport const deletePost =(postId)=>\r\n{\r\n    return {\r\n        type:DELETE_POST,\r\n        postId\r\n    }\r\n}\r\n \r\n\r\nexport const getUserProfile=(userId)=> async(dispatch)=>\r\n{\r\n    debugger\r\n        let data = await usersAPI.getProfile(userId)\r\n            dispatch(setUserProfile(data))\r\n}\r\n\r\nexport const getStatus=(userId)=>async(dispatch)=>\r\n{\r\n\r\n        let data = await profileAPI.getStatus(userId)\r\n            dispatch(setStatus(data))\r\n\r\n}\r\nexport const updateStatus=(status)=>async(dispatch)=>\r\n{\r\n        let response = await profileAPI.updateStatus(status)\r\n            if(response.data.resultCode===0)\r\n            {\r\n            dispatch(setStatus(status))\r\n            }\r\n}\r\n\r\nexport default ProfileReducer","const ADD_MESSAGE = 'ADD-MESSAGE'; \r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        { id: 1, name: 'Ivan' },\r\n        { id: 2, name: 'Dima' },\r\n        { id: 3, name: 'zenya' },\r\n        { id: 4, name: 'kostya' },\r\n    ],\r\n    messageData: [\r\n        { id: 1, message: 'hi' },\r\n        { id: 2, message: 'im from russia' },\r\n        { id: 3, message: 'i love you' },\r\n    ],\r\n}\r\n\r\n export const DialogsReducer = (state = initialState, action) =>\r\n{\r\n\r\n     if (action.type ===ADD_MESSAGE)\r\n    {\r\n        let stateCopy={\r\n            ...state,\r\n            messageData:[...state.messageData, {id:6,message:action.Message}]\r\n        }\r\n        return stateCopy;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const addMessageActionCreator =  (message) =>\r\n{\r\n    return{\r\n        type: ADD_MESSAGE, Message: message\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default DialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"settings_nav__3CrtL\",\"item\":\"settings_item__3S04t\",\"activeLink\":\"settings_activeLink__ZbfAI\"};","import React from 'react'\r\nimport preloader from '../../../assets/images/Infinity-1s-200px.svg'\r\n\r\nlet Preloader=(props)=>{\r\n    return<div><img src={preloader}/></div>\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__1iZFX\",\"error\":\"formsControls_error__20_ki\",\"FormSummaryError\":\"formsControls_FormSummaryError__2Vb8k\"};","import React from 'react'\r\nimport styles from './formsControls.module.css'\r\n\r\nexport const Textarea =({input, meta, ...props}) =>\r\n{\r\n    const hasError = (meta.error && meta.touched)\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props}/>\r\n            </div>\r\n            {hasError &&<span>\r\n                {meta.error}\r\n            </span>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const Input =({input, meta, ...props}) =>\r\n{\r\n    const hasError = (meta.error && meta.touched)\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError &&<span>\r\n                {meta.error}\r\n            </span>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Element = (Element) => ({input, meta, ...props}) =>\r\n{\r\n    const hasError = (meta.error && meta.touched)\r\n    \r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <Element {...input} {...props}/>\r\n            </div>\r\n            {hasError &&<span>\r\n                {meta.error}\r\n            </span>}\r\n\r\n        </div>\r\n    );\r\n};","export const required = value =>\r\n{   \r\n    if(value)\r\n         return undefined\r\n    else\r\n        return \"Field is required\"\r\n}\r\n\r\n\r\nexport const maxLengthCreator=(maxLength) => value =>\r\n{   \r\n    if( value.length>maxLength)\r\n         return \"max length is \"+maxLength\r\n    else\r\n        return undefined\r\n}","module.exports = __webpack_public_path__ + \"static/media/51f6fb256629fc755b8870c801092942.d961d73a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1v9Ej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Rv39q\",\"loginBlock\":\"Header_loginBlock__pHgS7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3djF5\",\"pageNumber\":\"Paginator_pageNumber__3ZtCp\",\"selectedPage\":\"Paginator_selectedPage__3qD7g\"};","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect=(state)=>({\r\n    isAuth:state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component)=>{\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent=connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}"],"sourceRoot":""}